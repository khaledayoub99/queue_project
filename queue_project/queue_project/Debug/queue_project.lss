
queue_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000624  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000624  00000698  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006a8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000714  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013aa  00000000  00000000  00000804  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000088e  00000000  00000000  00001bae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000096d  00000000  00000000  0000243c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00002dac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000469  00000000  00000000  00002f94  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009ef  00000000  00000000  000033fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00003dec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e2       	ldi	r30, 0x24	; 36
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 04 03 	call	0x608	; 0x608 <main>
  7a:	0c 94 10 03 	jmp	0x620	; 0x620 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_SetPinDir>:
		case DIO_PORTC:
		*val = PINC;
		break;
		
		case DIO_PORTD:
		*val = PIND;
  82:	44 23       	and	r20, r20
  84:	19 f0       	breq	.+6      	; 0x8c <DIO_SetPinDir+0xa>
  86:	41 30       	cpi	r20, 0x01	; 1
  88:	c9 f1       	breq	.+114    	; 0xfc <DIO_SetPinDir+0x7a>
  8a:	08 95       	ret
  8c:	81 30       	cpi	r24, 0x01	; 1
  8e:	91 f0       	breq	.+36     	; 0xb4 <DIO_SetPinDir+0x32>
  90:	28 f0       	brcs	.+10     	; 0x9c <DIO_SetPinDir+0x1a>
  92:	82 30       	cpi	r24, 0x02	; 2
  94:	d9 f0       	breq	.+54     	; 0xcc <DIO_SetPinDir+0x4a>
  96:	83 30       	cpi	r24, 0x03	; 3
  98:	29 f1       	breq	.+74     	; 0xe4 <DIO_SetPinDir+0x62>
  9a:	08 95       	ret
  9c:	2a b3       	in	r18, 0x1a	; 26
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <DIO_SetPinDir+0x26>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <DIO_SetPinDir+0x22>
  ac:	80 95       	com	r24
  ae:	82 23       	and	r24, r18
  b0:	8a bb       	out	0x1a, r24	; 26
  b2:	08 95       	ret
  b4:	27 b3       	in	r18, 0x17	; 23
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_SetPinDir+0x3e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_SetPinDir+0x3a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	87 bb       	out	0x17, r24	; 23
  ca:	08 95       	ret
  cc:	24 b3       	in	r18, 0x14	; 20
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <DIO_SetPinDir+0x56>
  d4:	88 0f       	add	r24, r24
  d6:	99 1f       	adc	r25, r25
  d8:	6a 95       	dec	r22
  da:	e2 f7       	brpl	.-8      	; 0xd4 <DIO_SetPinDir+0x52>
  dc:	80 95       	com	r24
  de:	82 23       	and	r24, r18
  e0:	84 bb       	out	0x14, r24	; 20
  e2:	08 95       	ret
  e4:	21 b3       	in	r18, 0x11	; 17
  e6:	81 e0       	ldi	r24, 0x01	; 1
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	02 c0       	rjmp	.+4      	; 0xf0 <DIO_SetPinDir+0x6e>
  ec:	88 0f       	add	r24, r24
  ee:	99 1f       	adc	r25, r25
  f0:	6a 95       	dec	r22
  f2:	e2 f7       	brpl	.-8      	; 0xec <DIO_SetPinDir+0x6a>
  f4:	80 95       	com	r24
  f6:	82 23       	and	r24, r18
  f8:	81 bb       	out	0x11, r24	; 17
  fa:	08 95       	ret
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	89 f0       	breq	.+34     	; 0x122 <DIO_SetPinDir+0xa0>
 100:	28 f0       	brcs	.+10     	; 0x10c <DIO_SetPinDir+0x8a>
 102:	82 30       	cpi	r24, 0x02	; 2
 104:	c9 f0       	breq	.+50     	; 0x138 <DIO_SetPinDir+0xb6>
 106:	83 30       	cpi	r24, 0x03	; 3
 108:	11 f1       	breq	.+68     	; 0x14e <DIO_SetPinDir+0xcc>
 10a:	08 95       	ret
 10c:	2a b3       	in	r18, 0x1a	; 26
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_SetPinDir+0x96>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_SetPinDir+0x92>
 11c:	82 2b       	or	r24, r18
 11e:	8a bb       	out	0x1a, r24	; 26
 120:	08 95       	ret
 122:	27 b3       	in	r18, 0x17	; 23
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	02 c0       	rjmp	.+4      	; 0x12e <DIO_SetPinDir+0xac>
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	6a 95       	dec	r22
 130:	e2 f7       	brpl	.-8      	; 0x12a <DIO_SetPinDir+0xa8>
 132:	82 2b       	or	r24, r18
 134:	87 bb       	out	0x17, r24	; 23
 136:	08 95       	ret
 138:	24 b3       	in	r18, 0x14	; 20
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_SetPinDir+0xc2>
 140:	88 0f       	add	r24, r24
 142:	99 1f       	adc	r25, r25
 144:	6a 95       	dec	r22
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_SetPinDir+0xbe>
 148:	82 2b       	or	r24, r18
 14a:	84 bb       	out	0x14, r24	; 20
 14c:	08 95       	ret
 14e:	21 b3       	in	r18, 0x11	; 17
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	02 c0       	rjmp	.+4      	; 0x15a <DIO_SetPinDir+0xd8>
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	6a 95       	dec	r22
 15c:	e2 f7       	brpl	.-8      	; 0x156 <DIO_SetPinDir+0xd4>
 15e:	82 2b       	or	r24, r18
 160:	81 bb       	out	0x11, r24	; 17
 162:	08 95       	ret

00000164 <DIO_WritePin>:
 164:	44 23       	and	r20, r20
 166:	19 f0       	breq	.+6      	; 0x16e <DIO_WritePin+0xa>
 168:	41 30       	cpi	r20, 0x01	; 1
 16a:	c9 f1       	breq	.+114    	; 0x1de <DIO_WritePin+0x7a>
 16c:	08 95       	ret
 16e:	81 30       	cpi	r24, 0x01	; 1
 170:	91 f0       	breq	.+36     	; 0x196 <DIO_WritePin+0x32>
 172:	28 f0       	brcs	.+10     	; 0x17e <DIO_WritePin+0x1a>
 174:	82 30       	cpi	r24, 0x02	; 2
 176:	d9 f0       	breq	.+54     	; 0x1ae <DIO_WritePin+0x4a>
 178:	83 30       	cpi	r24, 0x03	; 3
 17a:	29 f1       	breq	.+74     	; 0x1c6 <DIO_WritePin+0x62>
 17c:	08 95       	ret
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_WritePin+0x26>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_WritePin+0x22>
 18e:	80 95       	com	r24
 190:	82 23       	and	r24, r18
 192:	8b bb       	out	0x1b, r24	; 27
 194:	08 95       	ret
 196:	28 b3       	in	r18, 0x18	; 24
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <DIO_WritePin+0x3e>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	6a 95       	dec	r22
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <DIO_WritePin+0x3a>
 1a6:	80 95       	com	r24
 1a8:	82 23       	and	r24, r18
 1aa:	88 bb       	out	0x18, r24	; 24
 1ac:	08 95       	ret
 1ae:	25 b3       	in	r18, 0x15	; 21
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_WritePin+0x56>
 1b6:	88 0f       	add	r24, r24
 1b8:	99 1f       	adc	r25, r25
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_WritePin+0x52>
 1be:	80 95       	com	r24
 1c0:	82 23       	and	r24, r18
 1c2:	85 bb       	out	0x15, r24	; 21
 1c4:	08 95       	ret
 1c6:	22 b3       	in	r18, 0x12	; 18
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_WritePin+0x6e>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_WritePin+0x6a>
 1d6:	80 95       	com	r24
 1d8:	82 23       	and	r24, r18
 1da:	82 bb       	out	0x12, r24	; 18
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	89 f0       	breq	.+34     	; 0x204 <DIO_WritePin+0xa0>
 1e2:	28 f0       	brcs	.+10     	; 0x1ee <DIO_WritePin+0x8a>
 1e4:	82 30       	cpi	r24, 0x02	; 2
 1e6:	c9 f0       	breq	.+50     	; 0x21a <DIO_WritePin+0xb6>
 1e8:	83 30       	cpi	r24, 0x03	; 3
 1ea:	11 f1       	breq	.+68     	; 0x230 <DIO_WritePin+0xcc>
 1ec:	08 95       	ret
 1ee:	2b b3       	in	r18, 0x1b	; 27
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_WritePin+0x96>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	6a 95       	dec	r22
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_WritePin+0x92>
 1fe:	82 2b       	or	r24, r18
 200:	8b bb       	out	0x1b, r24	; 27
 202:	08 95       	ret
 204:	28 b3       	in	r18, 0x18	; 24
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 c0       	rjmp	.+4      	; 0x210 <DIO_WritePin+0xac>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	6a 95       	dec	r22
 212:	e2 f7       	brpl	.-8      	; 0x20c <DIO_WritePin+0xa8>
 214:	82 2b       	or	r24, r18
 216:	88 bb       	out	0x18, r24	; 24
 218:	08 95       	ret
 21a:	25 b3       	in	r18, 0x15	; 21
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	02 c0       	rjmp	.+4      	; 0x226 <DIO_WritePin+0xc2>
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	6a 95       	dec	r22
 228:	e2 f7       	brpl	.-8      	; 0x222 <DIO_WritePin+0xbe>
 22a:	82 2b       	or	r24, r18
 22c:	85 bb       	out	0x15, r24	; 21
 22e:	08 95       	ret
 230:	22 b3       	in	r18, 0x12	; 18
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_WritePin+0xd8>
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	6a 95       	dec	r22
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_WritePin+0xd4>
 240:	82 2b       	or	r24, r18
 242:	82 bb       	out	0x12, r24	; 18
 244:	08 95       	ret

00000246 <DIO_ReadPin>:
		default:
		break;
	}
}
void DIO_ReadPin(uint8 port,uint8 pin,uint8* val){
	switch(port)
 246:	81 30       	cpi	r24, 0x01	; 1
 248:	89 f0       	breq	.+34     	; 0x26c <DIO_ReadPin+0x26>
 24a:	28 f0       	brcs	.+10     	; 0x256 <DIO_ReadPin+0x10>
 24c:	82 30       	cpi	r24, 0x02	; 2
 24e:	c9 f0       	breq	.+50     	; 0x282 <DIO_ReadPin+0x3c>
 250:	83 30       	cpi	r24, 0x03	; 3
 252:	11 f1       	breq	.+68     	; 0x298 <DIO_ReadPin+0x52>
 254:	08 95       	ret
	{
		
		case DIO_PORTA:
		*val = GET_BIT(PINA,pin);
 256:	89 b3       	in	r24, 0x19	; 25
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_ReadPin+0x1a>
 25c:	95 95       	asr	r25
 25e:	87 95       	ror	r24
 260:	6a 95       	dec	r22
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_ReadPin+0x16>
 264:	81 70       	andi	r24, 0x01	; 1
 266:	fa 01       	movw	r30, r20
 268:	80 83       	st	Z, r24
		break;
 26a:	08 95       	ret
	
		case DIO_PORTB:
		*val = GET_BIT(PINB,pin);
 26c:	86 b3       	in	r24, 0x16	; 22
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	02 c0       	rjmp	.+4      	; 0x276 <DIO_ReadPin+0x30>
 272:	95 95       	asr	r25
 274:	87 95       	ror	r24
 276:	6a 95       	dec	r22
 278:	e2 f7       	brpl	.-8      	; 0x272 <DIO_ReadPin+0x2c>
 27a:	81 70       	andi	r24, 0x01	; 1
 27c:	fa 01       	movw	r30, r20
 27e:	80 83       	st	Z, r24
		break;
 280:	08 95       	ret
	
		case DIO_PORTC:
		*val = GET_BIT(PIND,pin);
 282:	80 b3       	in	r24, 0x10	; 16
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	02 c0       	rjmp	.+4      	; 0x28c <DIO_ReadPin+0x46>
 288:	95 95       	asr	r25
 28a:	87 95       	ror	r24
 28c:	6a 95       	dec	r22
 28e:	e2 f7       	brpl	.-8      	; 0x288 <DIO_ReadPin+0x42>
 290:	81 70       	andi	r24, 0x01	; 1
 292:	fa 01       	movw	r30, r20
 294:	80 83       	st	Z, r24
		break;
 296:	08 95       	ret
	
		case DIO_PORTD:
		*val = GET_BIT(PIND,pin);
 298:	80 b3       	in	r24, 0x10	; 16
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <DIO_ReadPin+0x5c>
 29e:	95 95       	asr	r25
 2a0:	87 95       	ror	r24
 2a2:	6a 95       	dec	r22
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <DIO_ReadPin+0x58>
 2a6:	81 70       	andi	r24, 0x01	; 1
 2a8:	fa 01       	movw	r30, r20
 2aa:	80 83       	st	Z, r24
 2ac:	08 95       	ret

000002ae <DIO_SetPullUp>:
	}
}

void DIO_SetPullUp( uint8 port , uint8 pin )
{
	switch(port)
 2ae:	81 30       	cpi	r24, 0x01	; 1
 2b0:	89 f0       	breq	.+34     	; 0x2d4 <DIO_SetPullUp+0x26>
 2b2:	28 f0       	brcs	.+10     	; 0x2be <DIO_SetPullUp+0x10>
 2b4:	82 30       	cpi	r24, 0x02	; 2
 2b6:	c9 f0       	breq	.+50     	; 0x2ea <DIO_SetPullUp+0x3c>
 2b8:	83 30       	cpi	r24, 0x03	; 3
 2ba:	11 f1       	breq	.+68     	; 0x300 <DIO_SetPullUp+0x52>
 2bc:	08 95       	ret
	{
		case DIO_PORTA:
		SET_BIT(PORTA,pin);
 2be:	2b b3       	in	r18, 0x1b	; 27
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <DIO_SetPullUp+0x1c>
 2c6:	88 0f       	add	r24, r24
 2c8:	99 1f       	adc	r25, r25
 2ca:	6a 95       	dec	r22
 2cc:	e2 f7       	brpl	.-8      	; 0x2c6 <DIO_SetPullUp+0x18>
 2ce:	82 2b       	or	r24, r18
 2d0:	8b bb       	out	0x1b, r24	; 27
		break;
 2d2:	08 95       	ret
		
		case DIO_PORTB:
		SET_BIT(PORTB,pin);
 2d4:	28 b3       	in	r18, 0x18	; 24
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_SetPullUp+0x32>
 2dc:	88 0f       	add	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	6a 95       	dec	r22
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_SetPullUp+0x2e>
 2e4:	82 2b       	or	r24, r18
 2e6:	88 bb       	out	0x18, r24	; 24
		break;
 2e8:	08 95       	ret
		
		case DIO_PORTC:
		SET_BIT(PORTC,pin);
 2ea:	25 b3       	in	r18, 0x15	; 21
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_SetPullUp+0x48>
 2f2:	88 0f       	add	r24, r24
 2f4:	99 1f       	adc	r25, r25
 2f6:	6a 95       	dec	r22
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_SetPullUp+0x44>
 2fa:	82 2b       	or	r24, r18
 2fc:	85 bb       	out	0x15, r24	; 21
		break;
 2fe:	08 95       	ret
		
		case DIO_PORTD:
		SET_BIT(PORTD,pin);
 300:	22 b3       	in	r18, 0x12	; 18
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	02 c0       	rjmp	.+4      	; 0x30c <DIO_SetPullUp+0x5e>
 308:	88 0f       	add	r24, r24
 30a:	99 1f       	adc	r25, r25
 30c:	6a 95       	dec	r22
 30e:	e2 f7       	brpl	.-8      	; 0x308 <DIO_SetPullUp+0x5a>
 310:	82 2b       	or	r24, r18
 312:	82 bb       	out	0x12, r24	; 18
 314:	08 95       	ret

00000316 <KayPad_Init>:
							  { 3 , 6 , 9 ,'#'},
							  {'A','B','C','D'}};
void KayPad_Init(void)
{
	
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Colum0	,	 DIO_PIN_OUTPUT	);
 316:	41 e0       	ldi	r20, 0x01	; 1
 318:	60 e0       	ldi	r22, 0x00	; 0
 31a:	83 e0       	ldi	r24, 0x03	; 3
 31c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Colum1	,	 DIO_PIN_OUTPUT	);
 320:	41 e0       	ldi	r20, 0x01	; 1
 322:	61 e0       	ldi	r22, 0x01	; 1
 324:	83 e0       	ldi	r24, 0x03	; 3
 326:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Colum2	,	 DIO_PIN_OUTPUT	);
 32a:	41 e0       	ldi	r20, 0x01	; 1
 32c:	62 e0       	ldi	r22, 0x02	; 2
 32e:	83 e0       	ldi	r24, 0x03	; 3
 330:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Colum3	,	 DIO_PIN_OUTPUT	);
 334:	41 e0       	ldi	r20, 0x01	; 1
 336:	63 e0       	ldi	r22, 0x03	; 3
 338:	83 e0       	ldi	r24, 0x03	; 3
 33a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Row0	,	 DIO_PIN_INPUT		);
 33e:	40 e0       	ldi	r20, 0x00	; 0
 340:	64 e0       	ldi	r22, 0x04	; 4
 342:	83 e0       	ldi	r24, 0x03	; 3
 344:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Row1	,	 DIO_PIN_INPUT		);
 348:	40 e0       	ldi	r20, 0x00	; 0
 34a:	65 e0       	ldi	r22, 0x05	; 5
 34c:	83 e0       	ldi	r24, 0x03	; 3
 34e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Row2	,	 DIO_PIN_INPUT		);
 352:	40 e0       	ldi	r20, 0x00	; 0
 354:	66 e0       	ldi	r22, 0x06	; 6
 356:	83 e0       	ldi	r24, 0x03	; 3
 358:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(	KAYPAD_PORT	,	KayPad_Row3	,	 DIO_PIN_INPUT		);
 35c:	40 e0       	ldi	r20, 0x00	; 0
 35e:	67 e0       	ldi	r22, 0x07	; 7
 360:	83 e0       	ldi	r24, 0x03	; 3
 362:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	
	DIO_SetPullUp(	KAYPAD_PORT		,		KayPad_Row0		);
 366:	64 e0       	ldi	r22, 0x04	; 4
 368:	83 e0       	ldi	r24, 0x03	; 3
 36a:	0e 94 57 01 	call	0x2ae	; 0x2ae <DIO_SetPullUp>
	DIO_SetPullUp(	KAYPAD_PORT		,		KayPad_Row1		);
 36e:	65 e0       	ldi	r22, 0x05	; 5
 370:	83 e0       	ldi	r24, 0x03	; 3
 372:	0e 94 57 01 	call	0x2ae	; 0x2ae <DIO_SetPullUp>
	DIO_SetPullUp(	KAYPAD_PORT		,		KayPad_Row2		);
 376:	66 e0       	ldi	r22, 0x06	; 6
 378:	83 e0       	ldi	r24, 0x03	; 3
 37a:	0e 94 57 01 	call	0x2ae	; 0x2ae <DIO_SetPullUp>
	DIO_SetPullUp(	KAYPAD_PORT		,		KayPad_Row3		);
 37e:	67 e0       	ldi	r22, 0x07	; 7
 380:	83 e0       	ldi	r24, 0x03	; 3
 382:	0e 94 57 01 	call	0x2ae	; 0x2ae <DIO_SetPullUp>
	
	DIO_WritePin(	KAYPAD_PORT	,	KayPad_Colum0	,	 DIO_PIN_HIGH	);
 386:	41 e0       	ldi	r20, 0x01	; 1
 388:	60 e0       	ldi	r22, 0x00	; 0
 38a:	83 e0       	ldi	r24, 0x03	; 3
 38c:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	DIO_WritePin(	KAYPAD_PORT	,	KayPad_Colum1	,	 DIO_PIN_HIGH	);
 390:	41 e0       	ldi	r20, 0x01	; 1
 392:	61 e0       	ldi	r22, 0x01	; 1
 394:	83 e0       	ldi	r24, 0x03	; 3
 396:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	DIO_WritePin(	KAYPAD_PORT	,	KayPad_Colum2	,	 DIO_PIN_HIGH	);
 39a:	41 e0       	ldi	r20, 0x01	; 1
 39c:	62 e0       	ldi	r22, 0x02	; 2
 39e:	83 e0       	ldi	r24, 0x03	; 3
 3a0:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	DIO_WritePin(	KAYPAD_PORT	,	KayPad_Colum3	,	 DIO_PIN_HIGH	);
 3a4:	41 e0       	ldi	r20, 0x01	; 1
 3a6:	63 e0       	ldi	r22, 0x03	; 3
 3a8:	83 e0       	ldi	r24, 0x03	; 3
 3aa:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
 3ae:	08 95       	ret

000003b0 <KayPad_GetVal>:
	
	
}

uint8 KayPad_GetVal(void)
{
 3b0:	ff 92       	push	r15
 3b2:	0f 93       	push	r16
 3b4:	1f 93       	push	r17
 3b6:	cf 93       	push	r28
 3b8:	df 93       	push	r29
 3ba:	1f 92       	push	r1
 3bc:	cd b7       	in	r28, 0x3d	; 61
 3be:	de b7       	in	r29, 0x3e	; 62
	uint8 Loc_Col = 0 ;
	uint8 Loc_row = 0 ;
	uint8 val	  = 0 ;
	uint8 temp    = 0 ;
 3c0:	19 82       	std	Y+1, r1	; 0x01

uint8 KayPad_GetVal(void)
{
	uint8 Loc_Col = 0 ;
	uint8 Loc_row = 0 ;
	uint8 val	  = 0 ;
 3c2:	f1 2c       	mov	r15, r1
	uint8 temp    = 0 ;
	
	for (	Loc_Col = COL_INIT	;	Loc_Col<=COL_Final	;	Loc_Col++	)
 3c4:	00 e0       	ldi	r16, 0x00	; 0
 3c6:	37 c0       	rjmp	.+110    	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
	{
		
		DIO_WritePin(	KAYPAD_PORT	,	Loc_Col		,	 DIO_PIN_LOW	);
 3c8:	40 e0       	ldi	r20, 0x00	; 0
 3ca:	60 2f       	mov	r22, r16
 3cc:	83 e0       	ldi	r24, 0x03	; 3
 3ce:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
		
		
		for (	Loc_row = Row_INIT	;	Loc_row <= Row_Final	;	Loc_row++	)
 3d2:	14 e0       	ldi	r17, 0x04	; 4
 3d4:	28 c0       	rjmp	.+80     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
		{
			DIO_ReadPin(	KAYPAD_PORT	,	Loc_row	,	&temp	);
 3d6:	ae 01       	movw	r20, r28
 3d8:	4f 5f       	subi	r20, 0xFF	; 255
 3da:	5f 4f       	sbci	r21, 0xFF	; 255
 3dc:	61 2f       	mov	r22, r17
 3de:	83 e0       	ldi	r24, 0x03	; 3
 3e0:	0e 94 23 01 	call	0x246	; 0x246 <DIO_ReadPin>
			if(	temp == 0 )
 3e4:	89 81       	ldd	r24, Y+1	; 0x01
 3e6:	81 11       	cpse	r24, r1
 3e8:	1d c0       	rjmp	.+58     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
			{
				
				val = KeyPad_Val[Loc_row-Row_INIT][Loc_Col-COL_INIT];
 3ea:	e1 2f       	mov	r30, r17
 3ec:	f0 e0       	ldi	r31, 0x00	; 0
 3ee:	34 97       	sbiw	r30, 0x04	; 4
 3f0:	ee 0f       	add	r30, r30
 3f2:	ff 1f       	adc	r31, r31
 3f4:	ee 0f       	add	r30, r30
 3f6:	ff 1f       	adc	r31, r31
 3f8:	e0 5a       	subi	r30, 0xA0	; 160
 3fa:	ff 4f       	sbci	r31, 0xFF	; 255
 3fc:	e0 0f       	add	r30, r16
 3fe:	f1 1d       	adc	r31, r1
 400:	f0 80       	ld	r15, Z
				while( temp == 0 )
 402:	07 c0       	rjmp	.+14     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
				{
					DIO_ReadPin(	KAYPAD_PORT	,	Loc_row	,	&temp	);
 404:	ae 01       	movw	r20, r28
 406:	4f 5f       	subi	r20, 0xFF	; 255
 408:	5f 4f       	sbci	r21, 0xFF	; 255
 40a:	61 2f       	mov	r22, r17
 40c:	83 e0       	ldi	r24, 0x03	; 3
 40e:	0e 94 23 01 	call	0x246	; 0x246 <DIO_ReadPin>
			DIO_ReadPin(	KAYPAD_PORT	,	Loc_row	,	&temp	);
			if(	temp == 0 )
			{
				
				val = KeyPad_Val[Loc_row-Row_INIT][Loc_Col-COL_INIT];
				while( temp == 0 )
 412:	89 81       	ldd	r24, Y+1	; 0x01
 414:	88 23       	and	r24, r24
 416:	b1 f3       	breq	.-20     	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 418:	8f e3       	ldi	r24, 0x3F	; 63
 41a:	9c e9       	ldi	r25, 0x9C	; 156
 41c:	01 97       	sbiw	r24, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 420:	00 c0       	rjmp	.+0      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 422:	00 00       	nop
	{
		
		DIO_WritePin(	KAYPAD_PORT	,	Loc_Col		,	 DIO_PIN_LOW	);
		
		
		for (	Loc_row = Row_INIT	;	Loc_row <= Row_Final	;	Loc_row++	)
 424:	1f 5f       	subi	r17, 0xFF	; 255
 426:	18 30       	cpi	r17, 0x08	; 8
 428:	b0 f2       	brcs	.-84     	; 0x3d6 <KayPad_GetVal+0x26>
					DIO_ReadPin(	KAYPAD_PORT	,	Loc_row	,	&temp	);
				}
				_delay_ms(10);
			}
		}
		DIO_WritePin(	KAYPAD_PORT	,	Loc_Col		,	 DIO_PIN_HIGH	);
 42a:	41 e0       	ldi	r20, 0x01	; 1
 42c:	60 2f       	mov	r22, r16
 42e:	83 e0       	ldi	r24, 0x03	; 3
 430:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	uint8 Loc_Col = 0 ;
	uint8 Loc_row = 0 ;
	uint8 val	  = 0 ;
	uint8 temp    = 0 ;
	
	for (	Loc_Col = COL_INIT	;	Loc_Col<=COL_Final	;	Loc_Col++	)
 434:	0f 5f       	subi	r16, 0xFF	; 255
 436:	04 30       	cpi	r16, 0x04	; 4
 438:	38 f2       	brcs	.-114    	; 0x3c8 <KayPad_GetVal+0x18>
			}
		}
		DIO_WritePin(	KAYPAD_PORT	,	Loc_Col		,	 DIO_PIN_HIGH	);
	}
	return val;
 43a:	8f 2d       	mov	r24, r15
 43c:	0f 90       	pop	r0
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	1f 91       	pop	r17
 444:	0f 91       	pop	r16
 446:	ff 90       	pop	r15
 448:	08 95       	ret

0000044a <LCD_Write_CMND>:
	_delay_ms(5);
	
	#endif
}

void LCD_Write_CMND(uint8 cmd){
 44a:	cf 93       	push	r28
 44c:	c8 2f       	mov	r28, r24
	_delay_ms(5);
	
	
	#elif LCD_Mode == 4
	
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_RW_PIN,DIO_PIN_LOW);
 44e:	40 e0       	ldi	r20, 0x00	; 0
 450:	62 e0       	ldi	r22, 0x02	; 2
 452:	81 e0       	ldi	r24, 0x01	; 1
 454:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_RS_PIN,DIO_PIN_LOW);
 458:	40 e0       	ldi	r20, 0x00	; 0
 45a:	61 e0       	ldi	r22, 0x01	; 1
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 462:	40 e0       	ldi	r20, 0x00	; 0
 464:	63 e0       	ldi	r22, 0x03	; 3
 466:	81 e0       	ldi	r24, 0x01	; 1
 468:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	
	PORTA =  ( cmd & 0XF0 ) |( PORTA & 0X0F ) ;
 46c:	8b b3       	in	r24, 0x1b	; 27
 46e:	9c 2f       	mov	r25, r28
 470:	90 7f       	andi	r25, 0xF0	; 240
 472:	8f 70       	andi	r24, 0x0F	; 15
 474:	89 2b       	or	r24, r25
 476:	8b bb       	out	0x1b, r24	; 27
	
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 478:	41 e0       	ldi	r20, 0x01	; 1
 47a:	63 e0       	ldi	r22, 0x03	; 3
 47c:	81 e0       	ldi	r24, 0x01	; 1
 47e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
 482:	8f e9       	ldi	r24, 0x9F	; 159
 484:	9f e0       	ldi	r25, 0x0F	; 15
 486:	01 97       	sbiw	r24, 0x01	; 1
 488:	f1 f7       	brne	.-4      	; 0x486 <LCD_Write_CMND+0x3c>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <LCD_Write_CMND+0x42>
 48c:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 48e:	40 e0       	ldi	r20, 0x00	; 0
 490:	63 e0       	ldi	r22, 0x03	; 3
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	
	PORTA =   (   cmd <<4  ) |( PORTA & 0X0F ) ;
 498:	20 e1       	ldi	r18, 0x10	; 16
 49a:	c2 9f       	mul	r28, r18
 49c:	c0 01       	movw	r24, r0
 49e:	11 24       	eor	r1, r1
 4a0:	9b b3       	in	r25, 0x1b	; 27
 4a2:	9f 70       	andi	r25, 0x0F	; 15
 4a4:	89 2b       	or	r24, r25
 4a6:	8b bb       	out	0x1b, r24	; 27
	
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 4a8:	41 e0       	ldi	r20, 0x01	; 1
 4aa:	63 e0       	ldi	r22, 0x03	; 3
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
 4b2:	8f e9       	ldi	r24, 0x9F	; 159
 4b4:	9f e0       	ldi	r25, 0x0F	; 15
 4b6:	01 97       	sbiw	r24, 0x01	; 1
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <LCD_Write_CMND+0x6c>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <LCD_Write_CMND+0x72>
 4bc:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 4be:	40 e0       	ldi	r20, 0x00	; 0
 4c0:	63 e0       	ldi	r22, 0x03	; 3
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
 4c8:	8f e1       	ldi	r24, 0x1F	; 31
 4ca:	9e e4       	ldi	r25, 0x4E	; 78
 4cc:	01 97       	sbiw	r24, 0x01	; 1
 4ce:	f1 f7       	brne	.-4      	; 0x4cc <LCD_Write_CMND+0x82>
 4d0:	00 c0       	rjmp	.+0      	; 0x4d2 <LCD_Write_CMND+0x88>
 4d2:	00 00       	nop
	
	_delay_ms(5);
	
	#endif
	
}
 4d4:	cf 91       	pop	r28
 4d6:	08 95       	ret

000004d8 <LCD_INIT>:
	LCD_Write_CMND(0X06);
	_delay_ms(5);
	
	#elif LCD_Mode == 4
	
	DIO_SetPinDir(LCD_4BIT_CMND_PORT,LCD_RS_PIN,DIO_PIN_OUTPUT);
 4d8:	41 e0       	ldi	r20, 0x01	; 1
 4da:	61 e0       	ldi	r22, 0x01	; 1
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_CMND_PORT,LCD_RW_PIN,DIO_PIN_OUTPUT);
 4e2:	41 e0       	ldi	r20, 0x01	; 1
 4e4:	62 e0       	ldi	r22, 0x02	; 2
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_OUTPUT);
 4ec:	41 e0       	ldi	r20, 0x01	; 1
 4ee:	63 e0       	ldi	r22, 0x03	; 3
 4f0:	81 e0       	ldi	r24, 0x01	; 1
 4f2:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	
	DIO_SetPinDir(LCD_4BIT_Data_PORT,LCD_DATA_PIN4,DIO_PIN_OUTPUT);
 4f6:	41 e0       	ldi	r20, 0x01	; 1
 4f8:	64 e0       	ldi	r22, 0x04	; 4
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_Data_PORT,LCD_DATA_PIN5,DIO_PIN_OUTPUT);
 500:	41 e0       	ldi	r20, 0x01	; 1
 502:	65 e0       	ldi	r22, 0x05	; 5
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_Data_PORT,LCD_DATA_PIN6,DIO_PIN_OUTPUT);
 50a:	41 e0       	ldi	r20, 0x01	; 1
 50c:	66 e0       	ldi	r22, 0x06	; 6
 50e:	80 e0       	ldi	r24, 0x00	; 0
 510:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
	DIO_SetPinDir(LCD_4BIT_Data_PORT,LCD_DATA_PIN7,DIO_PIN_OUTPUT);
 514:	41 e0       	ldi	r20, 0x01	; 1
 516:	67 e0       	ldi	r22, 0x07	; 7
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 51e:	2f ef       	ldi	r18, 0xFF	; 255
 520:	81 ee       	ldi	r24, 0xE1	; 225
 522:	94 e0       	ldi	r25, 0x04	; 4
 524:	21 50       	subi	r18, 0x01	; 1
 526:	80 40       	sbci	r24, 0x00	; 0
 528:	90 40       	sbci	r25, 0x00	; 0
 52a:	e1 f7       	brne	.-8      	; 0x524 <LCD_INIT+0x4c>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <LCD_INIT+0x56>
 52e:	00 00       	nop
	
	_delay_ms(100);
	
	LCD_Write_CMND(0X33);
 530:	83 e3       	ldi	r24, 0x33	; 51
 532:	0e 94 25 02 	call	0x44a	; 0x44a <LCD_Write_CMND>
	LCD_Write_CMND(0X32);
 536:	82 e3       	ldi	r24, 0x32	; 50
 538:	0e 94 25 02 	call	0x44a	; 0x44a <LCD_Write_CMND>
	LCD_Write_CMND(0X28);
 53c:	88 e2       	ldi	r24, 0x28	; 40
 53e:	0e 94 25 02 	call	0x44a	; 0x44a <LCD_Write_CMND>
	
	LCD_Write_CMND(0X0C);
 542:	8c e0       	ldi	r24, 0x0C	; 12
 544:	0e 94 25 02 	call	0x44a	; 0x44a <LCD_Write_CMND>
	LCD_Write_CMND(0X01);
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	0e 94 25 02 	call	0x44a	; 0x44a <LCD_Write_CMND>
 54e:	2f ef       	ldi	r18, 0xFF	; 255
 550:	89 ef       	ldi	r24, 0xF9	; 249
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	21 50       	subi	r18, 0x01	; 1
 556:	80 40       	sbci	r24, 0x00	; 0
 558:	90 40       	sbci	r25, 0x00	; 0
 55a:	e1 f7       	brne	.-8      	; 0x554 <LCD_INIT+0x7c>
 55c:	00 c0       	rjmp	.+0      	; 0x55e <LCD_INIT+0x86>
 55e:	00 00       	nop
	_delay_ms(20);
	LCD_Write_CMND(0X06);
 560:	86 e0       	ldi	r24, 0x06	; 6
 562:	0e 94 25 02 	call	0x44a	; 0x44a <LCD_Write_CMND>
	LCD_Write_CMND(0X02);
 566:	82 e0       	ldi	r24, 0x02	; 2
 568:	0e 94 25 02 	call	0x44a	; 0x44a <LCD_Write_CMND>
 56c:	8f e1       	ldi	r24, 0x1F	; 31
 56e:	9e e4       	ldi	r25, 0x4E	; 78
 570:	01 97       	sbiw	r24, 0x01	; 1
 572:	f1 f7       	brne	.-4      	; 0x570 <LCD_INIT+0x98>
 574:	00 c0       	rjmp	.+0      	; 0x576 <LCD_INIT+0x9e>
 576:	00 00       	nop
 578:	08 95       	ret

0000057a <LCD_Write_Char>:
	
	#endif
	
}

void LCD_Write_Char(uint8 data){
 57a:	cf 93       	push	r28
 57c:	c8 2f       	mov	r28, r24
	_delay_ms(5);
	
	
	#elif LCD_Mode == 4
	
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_RW_PIN,DIO_PIN_LOW);
 57e:	40 e0       	ldi	r20, 0x00	; 0
 580:	62 e0       	ldi	r22, 0x02	; 2
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_RS_PIN,DIO_PIN_HIGH);
 588:	41 e0       	ldi	r20, 0x01	; 1
 58a:	61 e0       	ldi	r22, 0x01	; 1
 58c:	81 e0       	ldi	r24, 0x01	; 1
 58e:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 592:	40 e0       	ldi	r20, 0x00	; 0
 594:	63 e0       	ldi	r22, 0x03	; 3
 596:	81 e0       	ldi	r24, 0x01	; 1
 598:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	
	PORTA =  ( data & 0XF0 )|( PORTA & 0X0F )  ;
 59c:	8b b3       	in	r24, 0x1b	; 27
 59e:	9c 2f       	mov	r25, r28
 5a0:	90 7f       	andi	r25, 0xF0	; 240
 5a2:	8f 70       	andi	r24, 0x0F	; 15
 5a4:	89 2b       	or	r24, r25
 5a6:	8b bb       	out	0x1b, r24	; 27
	
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 5a8:	41 e0       	ldi	r20, 0x01	; 1
 5aa:	63 e0       	ldi	r22, 0x03	; 3
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
 5b2:	8f e9       	ldi	r24, 0x9F	; 159
 5b4:	9f e0       	ldi	r25, 0x0F	; 15
 5b6:	01 97       	sbiw	r24, 0x01	; 1
 5b8:	f1 f7       	brne	.-4      	; 0x5b6 <LCD_Write_Char+0x3c>
 5ba:	00 c0       	rjmp	.+0      	; 0x5bc <LCD_Write_Char+0x42>
 5bc:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 5be:	40 e0       	ldi	r20, 0x00	; 0
 5c0:	63 e0       	ldi	r22, 0x03	; 3
 5c2:	81 e0       	ldi	r24, 0x01	; 1
 5c4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
	
	PORTA =  ( data <<4 ) | ( PORTA & 0X0F )  ;
 5c8:	20 e1       	ldi	r18, 0x10	; 16
 5ca:	c2 9f       	mul	r28, r18
 5cc:	c0 01       	movw	r24, r0
 5ce:	11 24       	eor	r1, r1
 5d0:	9b b3       	in	r25, 0x1b	; 27
 5d2:	9f 70       	andi	r25, 0x0F	; 15
 5d4:	89 2b       	or	r24, r25
 5d6:	8b bb       	out	0x1b, r24	; 27
	
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_HIGH);
 5d8:	41 e0       	ldi	r20, 0x01	; 1
 5da:	63 e0       	ldi	r22, 0x03	; 3
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
 5e2:	8f e9       	ldi	r24, 0x9F	; 159
 5e4:	9f e0       	ldi	r25, 0x0F	; 15
 5e6:	01 97       	sbiw	r24, 0x01	; 1
 5e8:	f1 f7       	brne	.-4      	; 0x5e6 <LCD_Write_Char+0x6c>
 5ea:	00 c0       	rjmp	.+0      	; 0x5ec <LCD_Write_Char+0x72>
 5ec:	00 00       	nop
	_delay_ms(1);
	DIO_WritePin(LCD_4BIT_CMND_PORT,LCD_E_PIN,DIO_PIN_LOW);
 5ee:	40 e0       	ldi	r20, 0x00	; 0
 5f0:	63 e0       	ldi	r22, 0x03	; 3
 5f2:	81 e0       	ldi	r24, 0x01	; 1
 5f4:	0e 94 b2 00 	call	0x164	; 0x164 <DIO_WritePin>
 5f8:	8f e1       	ldi	r24, 0x1F	; 31
 5fa:	9e e4       	ldi	r25, 0x4E	; 78
 5fc:	01 97       	sbiw	r24, 0x01	; 1
 5fe:	f1 f7       	brne	.-4      	; 0x5fc <LCD_Write_Char+0x82>
 600:	00 c0       	rjmp	.+0      	; 0x602 <LCD_Write_Char+0x88>
 602:	00 00       	nop
	
	_delay_ms(5);
	
	#endif
}
 604:	cf 91       	pop	r28
 606:	08 95       	ret

00000608 <main>:
#include "LCD.h"
#include "KayPad.h"

int main(void)
{
    LCD_INIT();
 608:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LCD_INIT>
	KayPad_Init();
 60c:	0e 94 8b 01 	call	0x316	; 0x316 <KayPad_Init>
	uint8 val =0;
    while (1) 
    {
		val = KayPad_GetVal();
 610:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <KayPad_GetVal>
		if (val)
 614:	88 23       	and	r24, r24
 616:	e1 f3       	breq	.-8      	; 0x610 <main+0x8>
		{
			LCD_Write_Char(val+48);
 618:	80 5d       	subi	r24, 0xD0	; 208
 61a:	0e 94 bd 02 	call	0x57a	; 0x57a <LCD_Write_Char>
 61e:	f8 cf       	rjmp	.-16     	; 0x610 <main+0x8>

00000620 <_exit>:
 620:	f8 94       	cli

00000622 <__stop_program>:
 622:	ff cf       	rjmp	.-2      	; 0x622 <__stop_program>
